{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "axon",
    "patterns": [
        {
            "include": "#coreFunctions"
        },
        {
            "include": "#calledElements"
        },
        {
            "include": "#units"
        },
        {
            "include": "#literals"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#comments"
        },
        {
            "include": "#languageConstants"
        },
        {
            "include": "#operators"
        },
        {
            "include": "#variables"
        }
    ],
    "repository": {
        "keywords": {
            "patterns": [{
                "name": "keyword.control.axon",
                "match": "\\b(defcomp|if|else|return|try|catch|throw|do|end)\\b"
            }]
        },
        "strings": {
            "patterns": [
                {
                    "name": "string.quoted.double.axon",
                    "begin": "\"",
                    "end": "\"",
                    "patterns": [
                        {
                            "name": "constant.character.escape.axon",
                            "match": "\\\\."
                        }
                    ]
                },
                {
                    "name": "string.quoted.triple.axon",
                    "begin": "\"\"\"",
                    "end": "\"\"\"",
                    "patterns": [
                        {
                            "name": "constant.character.escape.axon",
                            "match": "\\\\."
                        }
                    ]
                },
                {
                    "name": "string.quoted.raw.axon",
                    "begin": "r\"",
                    "end": "\""
                },
                {
                    "name": "string.quoted.other.uri.axon",
                    "begin": "`",
                    "end": "`",
                    "patterns": [
                        {
                            "name": "constant.character.escape.axon",
                            "match": "\\\\."
                        }
                    ]
                }
            ]
        },
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.double-slash.axon",
                    "begin": "//",
                    "end": "$"
                },
                {
                    "name": "comment.block.axon",
                    "begin": "/\\*",
                    "end": "\\*/"
                },
                {
                    "name": "comment.non-src-tag.axon",
                    "begin": "^(?!src)([a-z][a-zA-Z0-9_\\-]*):?",
                    "end": "(?=(^[a-z]))"
                },
                {
                    "name": "comment.entityseparator.axon",
                    "match": "^(\\-)+"
                }
            ]
        },
        "calledElements": {
            "patterns": [
                {
                    "name": "meta.functioncall.axon",
                    "match": "(?<=\\.)[a-zA-Z0-9_]+"
                },
                {
                    "name": "meta.trapcall.axon",
                    "match": "(?<=\\->)[a-zA-Z0-9_]+"
                }
            ]
        },
        "languageConstants": {
            "patterns": [{
                "name": "constant.language.axon",
                "match": "\\b(null|true|false)\\b"
            }]
        },
        "operators": {
            "patterns": [
                {
                    "name": "keyword.operator.logical.axon",
                    "match": "\\b(not|and|or)\\b"
                },
                {
                    "name": "keyword.operator.arithmetic.axon",
                    "match": "(\\+|\\*|\\%)"
                },
                {
                    "name": "keyword.operator.arithmetic.subtraction.axon",
                    "match": "\\-(?!>)"
                },
                {
                    "name": "keyword.operator.arithmetic.division.axon",
                    "match": "/(?!/)"
                },
                {
                    "name": "keyword.operator.range.axon",
                    "match": "\\.\\."
                },
                {
                    "name": "keyword.operator.trap.axon",
                    "match": "\\->"
                },
                {
                    "name": "keyword.operator.dotcall.axon",
                    "match": "\\.(?!\\.)"
                },
                {
                    "name": "keyword.operator.comparison.axon",
                    "match": "(==|!=|<=>|<=|>=|>|<)"
                },
                {
                    "name": "keyword.operator.lambda.axon",
                    "match": "=>"
                },
                {
                    "name": "keyword.operator.assignment.axon",
                    "match": "=(?!(=|>))"
                },
                {
                    "name": "keyword.operator.definition.axon",
                    "match": ":"
                }
            ]
        },
        "variables": {
            "patterns": [
                {
                    "name": "variable.defined.axon",
                    "match": "[a-zA-Z0-9_]+(\\s)*(?=:)"
                },
                {
                    "name": "variable.assigned.axon",
                    "match": "[a-zA-Z0-9_]+(\\s)*(?==)"
                }
            ]
        },
        "literals": {
            "patterns": [
                {
                    "name": "constant.other.date.axon",
                    "match": "\\b(\\d{4}\\-\\d{2}\\-\\d{2})\\b"
                },
                {
                    "name": "constant.other.daterange.axon",
                    "match": "\\b(\\d{4}\\-\\d{2})\\b"
                },
                {
                    "name": "constant.other.time.axon",
                    "match": "\\b((\\d)?\\d:\\d{2}(:\\d{2})?)\\b"
                },
                {
                    "name": "constant.numeric.axon",
                    "match": "\\b(\\d(\\d|_)*(\\.(\\d(\\d|_)*))?(e(\\-)?(\\d)(\\d|_)*)?)(?=\\D)"
                },
                {
                    "name": "constant.other.bin.axon",
                    "begin": "\\{bin\\,(\\s)*mime(\\s)*:\"",
                    "end": "\"(\\s)*\\}"
                }
            ]
        },
        "coreFunctions": {
            "patterns": [
                {
                    "name": "support.function.core.dotcalled.axon",
                    "match": "(?<=\\.)\\b(about|abs|add|addAll|addCol|addColMeta|addMeta|addRow|addRows|all|any|as|avg|call|capitalize|chart|col|colNames|colToList|cols|colsToLocale|commit|concat|contains|context|coord|coordDist|coordLat|coordLng|count|curFunc|date|dateTime|day|dayOfYear|debugType|decapitalize|diags|diff|dis|dst|each|eachDay|eachMonth|eachWhile|echo|emailSend|end|endsWith|eval|extAdd|extRemove|extSettings|extSettingsCommit|fandoc|filterToFunc|find|findAll|first|flatMap|fold|foldCol|foldCols|foldEnd|foldStart|folioBackup|folioBackupCleanup|folioBackupDelete|folioBackups|folioCompact|folioEmptyTrash|folioSetMode|folioSnapshot|folioSnapshotDelete|folioSnapshots|format|formats|fromJavaMillis|func|funcs|get|getSafe|gridColKinds|gridColsToDict|gridRowsToDict|has|heading|hour|hoursInDay|httpSiteUri|index|indexr|insert|insertAll|invoke|invokeAction|isAlpha|isAlphaNum|isBool|isDate|isDateTime|isDict|isDigit|isEmpty|isEven|isFunc|isGrid|isKeyword|isList|isLower|isMetric|isNaN|isNumber|isOdd|isRef|isSpace|isStr|isTagName|isTime|isUpper|isUri|isWeekday|isWeekend|join|joinAll|keepCols|last|lastMonth|lastWeek|lastYear|licStatus|log|logDebug|logErr|logInfo|logRead|logWarn|lower|map|marker|max|merge|meta|min|minute|missing|month|moveTo|na|name|names|nan|nav|navChildren|navCommonAncestor|navFilter|navLevels|navProjNames|navTrees|negInf|now|nowTicks|numDaysInMonth|occurred|ops|padl|padr|params|parseBool|parseDate|parseDateTime|parseFilter|parseFloat|parseInt|parseNumber|parseRef|parseTime|parseUnit|parseUri|passwordSet|pastMonth|pastWeek|pastYear|pivot|posInf|reFind|reGroups|reMatches|read|readAll|readAllTagNames|readAllTagVals|readById|readByIdPersistentTags|readByIdTransientTags|readByIds|readByName|readCount|readLink|readProjStatus|recDisable|recDup|recEdit|recEnable|recForm|recFormCommit|recNew|recTrash|refDis|refGen|remove|removeCol|removeCols|removeMarker|renameCol|reorderCols|replace|second|set|size|sort|sortr|split|spread|start|startsWith|sum|swizzleRefs|table|tags|thisMonth|thisWeek|thisYear|time|times|to|toAxonCode|toChar|toDateSpan|toDateTimeSpan|toGrid|toHex|toJavaMillis|toLocale|toRadix|toRec|toRecId|toRecIdList|toRecList|toSpan|toStr|toTagName|toTimeZone|today|trap|trim|trimEnd|trimStart|tz|tzdb|uiLink|uiLinkAbs|uiNavProjNames|unique|unit|unitdb|unitsEq|upper|uriBasename|uriDecode|uriEncode|uriExt|uriHost|uriIsDir|uriName|uriPath|uriPathStr|uriPort|uriScheme|userCur|userIsProjAccessible|userRead|userReadAll|userReadById|userSetPassword|validateFilter|validateNotBlank|validateTagName|validateUsername|vals|watchAdd|watchClose|watchFeed|watchOpen|watchPoll|watchRemove|watchSub|watchUnsub|weekOfYear|weekday|xq|xqDefine|xqEval|xqExecute|xqFindAll|xqFlatMap|xqHisRead|xqHisRollup|xqHisRollupAuto|xqMap|xqPivot|xqProjs|xqReadAll|xqReadAllList|xqReadByIds|xqReadByIdsList|year|yesterday)\\b"
                },
                {
                    "name": "support.function.core.called.axon",
                    "match": "\\b(about|abs|add|addAll|addCol|addColMeta|addMeta|addRow|addRows|all|any|as|avg|call|capitalize|chart|col|colNames|colToList|cols|colsToLocale|commit|concat|contains|context|coord|coordDist|coordLat|coordLng|count|curFunc|date|dateTime|day|dayOfYear|debugType|decapitalize|diags|diff|dis|dst|each|eachDay|eachMonth|eachWhile|echo|emailSend|end|endsWith|eval|extAdd|extRemove|extSettings|extSettingsCommit|fandoc|filterToFunc|find|findAll|first|flatMap|fold|foldCol|foldCols|foldEnd|foldStart|folioBackup|folioBackupCleanup|folioBackupDelete|folioBackups|folioCompact|folioEmptyTrash|folioSetMode|folioSnapshot|folioSnapshotDelete|folioSnapshots|format|formats|fromJavaMillis|func|funcs|get|getSafe|gridColKinds|gridColsToDict|gridRowsToDict|has|heading|hour|hoursInDay|httpSiteUri|index|indexr|insert|insertAll|invoke|invokeAction|isAlpha|isAlphaNum|isBool|isDate|isDateTime|isDict|isDigit|isEmpty|isEven|isFunc|isGrid|isKeyword|isList|isLower|isMetric|isNaN|isNumber|isOdd|isRef|isSpace|isStr|isTagName|isTime|isUpper|isUri|isWeekday|isWeekend|join|joinAll|keepCols|last|lastMonth|lastWeek|lastYear|licStatus|log|logDebug|logErr|logInfo|logRead|logWarn|lower|map|marker|max|merge|meta|min|minute|missing|month|moveTo|na|name|names|nan|nav|navChildren|navCommonAncestor|navFilter|navLevels|navProjNames|navTrees|negInf|now|nowTicks|numDaysInMonth|occurred|ops|padl|padr|params|parseBool|parseDate|parseDateTime|parseFilter|parseFloat|parseInt|parseNumber|parseRef|parseTime|parseUnit|parseUri|passwordSet|pastMonth|pastWeek|pastYear|pivot|posInf|reFind|reGroups|reMatches|read|readAll|readAllTagNames|readAllTagVals|readById|readByIdPersistentTags|readByIdTransientTags|readByIds|readByName|readCount|readLink|readProjStatus|recDisable|recDup|recEdit|recEnable|recForm|recFormCommit|recNew|recTrash|refDis|refGen|remove|removeCol|removeCols|removeMarker|renameCol|reorderCols|replace|second|set|size|sort|sortr|split|spread|start|startsWith|sum|swizzleRefs|table|tags|thisMonth|thisWeek|thisYear|time|times|to|toAxonCode|toChar|toDateSpan|toDateTimeSpan|toGrid|toHex|toJavaMillis|toLocale|toRadix|toRec|toRecId|toRecIdList|toRecList|toSpan|toStr|toTagName|toTimeZone|today|trap|trim|trimEnd|trimStart|tz|tzdb|uiLink|uiLinkAbs|uiNavProjNames|unique|unit|unitdb|unitsEq|upper|uriBasename|uriDecode|uriEncode|uriExt|uriHost|uriIsDir|uriName|uriPath|uriPathStr|uriPort|uriScheme|userCur|userIsProjAccessible|userRead|userReadAll|userReadById|userSetPassword|validateFilter|validateNotBlank|validateTagName|validateUsername|vals|watchAdd|watchClose|watchFeed|watchOpen|watchPoll|watchRemove|watchSub|watchUnsub|weekOfYear|weekday|xq|xqDefine|xqEval|xqExecute|xqFindAll|xqFlatMap|xqHisRead|xqHisRollup|xqHisRollupAuto|xqMap|xqPivot|xqProjs|xqReadAll|xqReadAllList|xqReadByIds|xqReadByIdsList|year|yesterday)\\b(?=\\()"
                }
            ]
        },
        "units": {
            "patterns": [
                {
                    "name": "constant.other.unit.dimensionless.axon",
                    "match": "(?<=\\d)(percent|%|pixel|px|decibel|db|power_factor|pf|pH|percent_relative_humidity|%RH|grams_of_water_per_kilogram_dry_air|gH₂O/kgAir|volts_per_degree_kelvin|V/K|degree_days_celsius|°daysC|degree_days_fahrenheit|°daysF|percent_obscuration_per_foot|%obsc/ft|percent_obscuration_per_meter|%obsc/m|psi_per_degree_fahrenheit|psi/°F|square_meters_per_newton|m²/N|watts_per_square_meter_degree_kelvin|W/m²K|db_milliVolt|dBmV|db_microVolt|dBµV|parts_per_unit|ppu|parts_per_million|ppm|parts_per_billion|ppb|grams_per_kilogram|g/kg|radian|rad|degrees_angular|deg|degrees_phase|degPh|steradian|sr|nephelometric_turbidity_units|ntu|formazin_nephelometric_unit|fnu|power_usage_effectiveness|PUE|data_center_infrastructure_efficiency|DCIE)\\b"
                },
                {
                    "name": "constant.other.unit.currency.axon",
                    "match": "(?<=\\d)(afghani|AFN|Af|algerian_dinar|DZD|argentine_peso|ARS|armenian_dram|AMD|Դ|aruban_guilder_florin|AWG|ƒ|australian_dollar|AUD|azerbaijanian_manat|AZN|ман|bahamian_dollar|BSD|bahraini_dinar|BHD|baht|THB|฿|balboa|PAB|barbados_dollar|BBD|belarussian_ruble|BYR|Br|belize_dollar|BZD|bermudian_dollar|BMD|bolivar_fuerte|VEF|boliviano|BOB|brazilian_real|BRL|R$|brunei_dollar|BND|bulgarian_lev|BGN|лв|burundi_franc|BIF|canadian_dollar|CAD|cape_verde_escudo|CVE|cayman_islands_dollar|KYD|cedi|GHS|₵|cfa_franc_bceao|XAF|cfp_franc|XPF|chilean_peso|CLP|chinese_yuan|CNY|元|congolese_franc|CDF|cordoba_oro|NIO|C$|costa_rican_colon|CRC|₡|croatian_kuna|HRK|Kn|cuban_peso|CUP|czech_koruna|CZK|Kč|dalasi|GMD|danish_krone|DKK|kr|denar|MKD|ден|djibouti_franc|DJF|dobra|STD|Db|dominican_peso|DOP|dong|VND|₫|east_caribbean_dollar|XCD|egyptian_pound|EGP|ethiopian_birr|ETB|euro|EUR|€|falkland_islands_pound|FKP|fiji_dollar|FJD|forint|HUF|gibraltar_pound|GIP|gourde|HTG|guarani|PYG|₲|guinea_franc|GNF|guyana_dollar|GYD|hong_kong_dollar|HKD|hryvnia|UAH|₴|iceland_krona|ISK|Kr|indian_rupee|INR|₹|iranian_rial|IRR|iraqi_dinar|IQD|jamaican_dollar|JMD|jordanian_dinar|JOD|kenyan_shilling|KES|Sh|kina|PGK|kip|LAK|₭|konvertibilna_marka|BAM|КМ|kuwaiti_dinar|KWD|kwacha|MWK|MK|kwanza|AOA|Kz|kyat|MMK|lari|GEL|ლ|lebanese_pound|LBP|lek|ALL|lempira|HNL|leone|SLL|Le|leu|RON|liberian_dollar|LRD|libyan_dinar|LYD|lilangeni|SZL|loti|LSL|malagasy_ariary|MGA|malaysian_ringgit|MYR|RM|manat|TMT|mauritius_rupee|MUR|metical|MZN|MTn|mexican_peso|MXN|moldavian_leu|MDL|moroccan_dirham|MAD|naira|NGN|₦|nakfa|ERN|Nfk|namibia_dollar|NAD|nepalese_rupee|NPR|new_israeli_shekel|ILS|₪|new_zealand_dollar|NZD|ngultrum|BTN|north_korean_won|KPW|norwegian_krone|NOK|nuevo_sol|PEN|ouguiya|MRO|UM|pakistan_rupee|PKR|₨|pataca|MOP|peso_uruguayo|UYU|philippine_peso|PHP|₱|pound_sterling|GBP|£|pula|BWP|pzloty|PLN|zł|qatari_rial|QAR|quetzal|GTQ|rand|ZAR|rial_omani|OMR|riel|KHR|rufiyaa|MVR|rupiah|IDR|Rp|russian_ruble|RUB|rwanda_franc|RWF|saint_helena_pound|SHP|saudi_riyal|SAR|serbian_dinar|RSD|din|seychelles_rupee|SCR|singapore_dollar|SGD|solomon_islands_dollar|SBD|som|KGS|somali_shilling|SOS|somoni|TJS|ЅМ|south_korean_won|KRW|₩|sri_lanka_rupee|LKR|Rs|sudanese_pound|SDG|suriname_dollar|SRD|swedish_krona|SEK|swiss_franc|CHF|SFr|syrian_pound|SYP|taiwan_dollar|TWD|taka|BDT|৳|tala|WST|tanzanian_shilling|TZS|tenge|KZT|〒|trinidad_and_tobago_dollar|TTD|tugrik|MNT|₮|tunisian_dinar|TND|turkish_lira|TRY|₤|uae_dirham|AED|uganda_shilling|UGX|us_dollar|USD|$|uzbekistan_sum|UZS|vatu|VUV|Vt|yemeni_rial|YER|yen|JPY|¥|zambian_kwacha|ZMW|ZK|zimbabwe_dollar|ZWL)\\b"
                },
                {
                    "name": "constant.other.unit.acceleration.axon",
                    "match": "(?<=\\d)(meters_per_second_squared|m/s²)\\b"
                },
                {
                    "name": "constant.other.unit.angular-acceleration.axon",
                    "match": "(?<=\\d)(radians_per_second_squared|rad/s²)\\b"
                },
                {
                    "name": "constant.other.unit.angular-momentum.axon",
                    "match": "(?<=\\d)(joule_second|Js)\\b"
                },
                {
                    "name": "constant.other.unit.angular-velocity.axon",
                    "match": "(?<=\\d)(radians_per_second|rad/s|revolutions_per_minute|rpm)\\b"
                },
                {
                    "name": "constant.other.unit.area.axon",
                    "match": "(?<=\\d)(square_meter|m²|square_millimeter|mm²|square_centimeter|cm²|square_kilometer|km²|square_inch|in²|square_foot|ft²|square_yard|yd²|square_mile|mile²|acre)\\b"
                },
                {
                    "name": "constant.other.unit.capacitance.axon",
                    "match": "(?<=\\d)(farad|F)\\b"
                },
                {
                    "name": "constant.other.unit.cooling-efficiency.axon",
                    "match": "(?<=\\d)(coefficient_of_performance|COP|kilowatt_per_ton|kW/ton|energy_efficiency_ratio|Btu/Wh|EER)\\b"
                },
                {
                    "name": "constant.other.unit.density.axon",
                    "match": "(?<=\\d)(kilograms_per_cubic_meter|kg/m³|micrograms_per_cubic_meter|µg/m³)\\b"
                },
                {
                    "name": "constant.other.unit.electric-charge.axon",
                    "match": "(?<=\\d)(coulomb|C|ampere_hour|Ah)\\b"
                },
                {
                    "name": "constant.other.unit.electric-conductance.axon",
                    "match": "(?<=\\d)(siemens|S)\\b"
                },
                {
                    "name": "constant.other.unit.electric-current.axon",
                    "match": "(?<=\\d)(ampere|A|milliampere|mA)\\b"
                },
                {
                    "name": "constant.other.unit.electromagnetic-moment.axon",
                    "match": "(?<=\\d)(ampere_square_meter|Am²)\\b"
                },
                {
                    "name": "constant.other.unit.electric-current-density.axon",
                    "match": "(?<=\\d)(amperes_per_square_meter|A/m²)\\b"
                },
                {
                    "name": "constant.other.unit.electric-field-strength.axon",
                    "match": "(?<=\\d)(volts_per_meter|V/m)\\b"
                },
                {
                    "name": "constant.other.unit.electric-potential.axon",
                    "match": "(?<=\\d)(Volt|V|milliVolt|mV|kiloVolt|kV|megaVolt|MV)\\b"
                },
                {
                    "name": "constant.other.unit.electric-resistance.axon",
                    "match": "(?<=\\d)(ohm|Ω|Ω|kilohm|kΩ|kΩ|megohm|MΩ|MΩ|milliohm|mΩ|mΩ)\\b"
                },
                {
                    "name": "constant.other.unit.electrical-conductivity.axon",
                    "match": "(?<=\\d)(siemens_per_meter|S/m)\\b"
                },
                {
                    "name": "constant.other.unit.electrical-resistivity.axon",
                    "match": "(?<=\\d)(ohm_meter|Ωm|Ωm)\\b"
                },
                {
                    "name": "constant.other.unit.energy.axon",
                    "match": "(?<=\\d)(joule|J|kilojoule|kJ|watt_hour|Wh|kilowatt_hour|kWh|megawatt_hour|MWh|btu|BTU|kilobtu|kBTU|megabtu|MBTU|MMBTU|horsepower_hour|hph|calorie|cal|therm|tons_refrigeration_hour|tonrefh|megajoule|MJ|gigajoule|GJ|newton_meter|Nm|cubic_meters_natural_gas|m³_gas|cubic_feet_natural_gas|ft³_gas)\\b"
                },
                {
                    "name": "constant.other.unit.apparent-energy.axon",
                    "match": "(?<=\\d)(volt_ampere_hour|VAh|kilovolt_ampere_hour|kVAh|megavolt_ampere_hour|MVAh)\\b"
                },
                {
                    "name": "constant.other.unit.reactive-energy.axon",
                    "match": "(?<=\\d)(volt_ampere_reactive_hour|VARh|kilovolt_ampere_reactive_hour|kVARh|megavolt_ampere_reactive_hour|MVARh)\\b"
                },
                {
                    "name": "constant.other.unit.energy-by-area.axon",
                    "match": "(?<=\\d)(joules_per_square_meter|J/m²|watt_hours_per_square_meter|Wh/m²|watt_hours_per_square_foot|Wh/ft²|kilowatt_hours_per_square_meter|kWh/m²|kilowatt_hours_per_square_foot|kWh/ft²|megawatt_hours_per_square_meter|MWh/m²|megawatt_hours_per_square_foot|MWh/ft²|megajoules_per_square_meter|MJ/m²|megajoules_per_square_foot|MJ/ft²|kilobtu_per_square_foot|kBTU/ft²|megabtu_per_square_foot|MBTU/ft²)\\b"
                },
                {
                    "name": "constant.other.unit.enthalpy.axon",
                    "match": "(?<=\\d)(joules_per_gram|J/g|joules_per_kilogram|J/kg|joules_per_kilogram_dry_air|J/kg_dry|btu_per_pound|BTU/lb|btus_per_pound_dry_air|btu/lb_dry|kilojoules_per_kilogram|kJ/kg|kilojoules_per_kilogram_dry_air|kJ/kg_dry|megajoules_per_kilogram_dry_air|MJ/kg_dry|calorie_per_gram|cal/g)\\b"
                },
                {
                    "name": "constant.other.unit.entropy.axon",
                    "match": "(?<=\\d)(joules_per_degree_kelvin|J/°K|kilojoules_per_degree_kelvin|kJ/°K|megajoules_per_degree_kelvin|MJ/°K)\\b"
                },
                {
                    "name": "constant.other.unit.force.axon",
                    "match": "(?<=\\d)(newton|N|pound_force|lbf)\\b"
                },
                {
                    "name": "constant.other.unit.frequency.axon",
                    "match": "(?<=\\d)(hertz|Hz|kilohertz|kHz|cycles_per_hour|cph|cycles_per_minute|cpm|megahertz|MHz|per_minute|/min|per_second|/s|per_hour|/h|percent_per_second|%/s|air_changes_per_hour|ACH)\\b"
                },
                {
                    "name": "constant.other.unit.grammage.axon",
                    "match": "(?<=\\d)(kilograms_per_square_meter|kg/m²|grams_per_square_meter|g/m²)\\b"
                },
                {
                    "name": "constant.other.unit.heating-rate.axon",
                    "match": "(?<=\\d)(degrees_kelvin_per_second|K/s|degrees_celsius_per_hour|°C/h|degrees_celsius_per_minute|°C/min|degrees_fahrenheit_per_hour|°F/h|degrees_fahrenheit_per_minute|°F/min|degrees_kelvin_per_hour|K/h|degrees_kelvin_per_minute|K/min)\\b"
                },
                {
                    "name": "constant.other.unit.illuminance.axon",
                    "match": "(?<=\\d)(lux|lx|candelas_per_square_meter|cd/m²)\\b"
                },
                {
                    "name": "constant.other.unit.inductance.axon",
                    "match": "(?<=\\d)(henry|H)\\b"
                },
                {
                    "name": "constant.other.unit.irradiance.axon",
                    "match": "(?<=\\d)(watts_per_square_meter_irradiance|W/m²_irr|watts_per_square_foot_irradiance|W/ft²_irr)\\b"
                },
                {
                    "name": "constant.other.unit.length.axon",
                    "match": "(?<=\\d)(meter|m|micrometer|µm|millimeter|mm|centimeter|cm|kilometer|km|inch|in|foot|ft|yard|yd|mile)\\b"
                },
                {
                    "name": "constant.other.unit.luminescence.axon",
                    "match": "(?<=\\d)(candela|cd|footcandle|ftcd)\\b"
                },
                {
                    "name": "constant.other.unit.luminous-flux.axon",
                    "match": "(?<=\\d)(lumen|lm)\\b"
                },
                {
                    "name": "constant.other.unit.magnetic-field-strength.axon",
                    "match": "(?<=\\d)(amperes_per_meter|A/m)\\b"
                },
                {
                    "name": "constant.other.unit.magnetic-flux.axon",
                    "match": "(?<=\\d)(weber|Wb)\\b"
                },
                {
                    "name": "constant.other.unit.magnetic-flux-density.axon",
                    "match": "(?<=\\d)(tesla|T)\\b"
                },
                {
                    "name": "constant.other.unit.mass.axon",
                    "match": "(?<=\\d)(kilogram|kg|milligram|mg|gram|g|ounce|oz|pound|lb|kilopound|klb|metric_ton|ton|short_ton|t)\\b"
                },
                {
                    "name": "constant.other.unit.mass-flow.axon",
                    "match": "(?<=\\d)(kilograms_per_second|kg/s|kilograms_per_minute|kg/min|kilograms_per_hour|kg/h|pounds_per_minute|lb/min|pounds_per_hour|lb/h|pounds_per_second|lb/s|kilopounds_per_hour|klb/h|grams_per_second|g/s|grams_per_minute|g/min|metric_tons_per_hour|ton/h)\\b"
                },
                {
                    "name": "constant.other.unit.momentum.axon",
                    "match": "(?<=\\d)(newton_second|Ns)\\b"
                },
                {
                    "name": "constant.other.unit.power.axon",
                    "match": "(?<=\\d)(watt|W|milliwatt|mW|kilowatt|kW|megawatt|MW|gigawatt|GW|btus_per_hour|BTU/h|therms_per_hour|therm/h|horsepower|hp|foot_pounds_per_second|ftlbs/sec|tons_refrigeration|tonref|kilobtus_per_hour|kBTU/h|megabtus_per_hour|MBTU/h|MMBTU/h|joules_per_hour|J/h|kilojoules_per_hour|kJ/h|megajoules_per_hour|MJ/h)\\b"
                },
                {
                    "name": "constant.other.unit.power-by-area.axon",
                    "match": "(?<=\\d)(watts_per_square_meter|W/m²|watts_per_square_foot|W/ft²|kilowatts_per_square_meter|kW/m²|kilowatts_per_square_foot|kW/ft²|kilobtus_per_hour_per_square_foot|kBTU/h/ft²)\\b"
                },
                {
                    "name": "constant.other.unit.power-by-volumetric-flow.axon",
                    "match": "(?<=\\d)(watts_per_cubic_meters_per_second|W/m³/s|watts_per_cubic_feet_per_minute|W/cfm|kilowatts_per_kilocubic_feet_per_minute|kW/kcfm|kilowatts_per_gallons_per_minute|kW/gal/min)\\b"
                },
                {
                    "name": "constant.other.unit.apparent-power.axon",
                    "match": "(?<=\\d)(volt_ampere|VA|kilovolt_ampere|kVA|megavolt_ampere|mVA)\\b"
                },
                {
                    "name": "constant.other.unit.reactive-power.axon",
                    "match": "(?<=\\d)(volt_ampere_reactive|VAR|kilovolt_ampere_reactive|kVAR|megavolt_ampere_reactive|MVAR)\\b"
                },
                {
                    "name": "constant.other.unit.pressure.axon",
                    "match": "(?<=\\d)(pascal|Pa|kilopascal|kPa|bar|atmosphere|atm|pounds_per_square_inch|psi|centimeters_of_water|cmH₂O|inches_of_water|in/wc|inH₂O|millimeters_of_mercury|mmHg|centimeters_of_mercury|cmHg|inches_of_mercury|inHg|hectopascal|hPa|millibar|mbar)\\b"
                },
                {
                    "name": "constant.other.unit.specific-entropy.axon",
                    "match": "(?<=\\d)(joules_per_kilogram_degree_kelvin|J/kg°K)\\b"
                },
                {
                    "name": "constant.other.unit.surface-tension.axon",
                    "match": "(?<=\\d)(newtons_per_meter|N/m)\\b"
                },
                {
                    "name": "constant.other.unit.temperature.axon",
                    "match": "(?<=\\d)(fahrenheit|°F|celsius|°C|kelvin|K)\\b"
                },
                {
                    "name": "constant.other.unit.temperature-differential.axon",
                    "match": "(?<=\\d)(fahrenheit_degrees|Δ°F|celsius_degrees|Δ°C|kelvin_degrees|ΔK)\\b"
                },
                {
                    "name": "constant.other.unit.thermal-conductivity.axon",
                    "match": "(?<=\\d)(watts_per_meter_degree_kelvin|W/m°K)\\b"
                },
                {
                    "name": "constant.other.unit.time.axon",
                    "match": "(?<=\\d)(nanosecond|ns|microsecond|µs|millisecond|ms|hundredths_second|cs|tenths_second|ds|second|sec|s|minute|min|hour|hr|h|day|week|wk|julian_month|mo|year|yr)\\b"
                },
                {
                    "name": "constant.other.unit.velocity.axon",
                    "match": "(?<=\\d)(meters_per_second|m/s|kilometers_per_second|km/s|kilometers_per_hour|km/h|miles_per_hour|mph|feet_per_second|ft/s|feet_per_minute|ft/min|millimeters_per_second|mm/s|millimeters_per_minute|mm/min|meters_per_minute|m/min|meters_per_hour|m/h|knot)\\b"
                },
                {
                    "name": "constant.other.unit.volume.axon",
                    "match": "(?<=\\d)(cubic_meter|m³|cubic_millimeter|mm³|cubic_centimeter|cm³|milliliter|mL|hectoliter|hL|liter|L|kiloliter|kL|cubic_inch|in³|cubic_foot|ft³|cubic_yard|yd³|gallon|gal|kilogallon|kgal|quart|qt|pint|pt|fluid_ounce|fl_oz|imperial_gallon|galUK|hecto_cubic_foot|hft³)\\b"
                },
                {
                    "name": "constant.other.unit.volumetric-flow.axon",
                    "match": "(?<=\\d)(cubic_meters_per_second|m³/s|milliliters_per_second|mL/s|hectoliters_per_second|hL/s|liters_per_second|L/s|cubic_feet_per_second|cfs|cubic_feet_per_minute|cfm|cubic_feet_per_hour|cfh|kilocubic_feet_per_minute|kcfm|imperial_gallons_per_minute|galUK/min|liters_per_minute|L/min|gallons_per_minute|gal/min|liters_per_hour|L/h|cubic_meters_per_minute|m³/min|cubic_meters_per_hour|m³/h)\\b"
                },
                {
                    "name": "constant.other.unit.bytes.axon",
                    "match": "(?<=\\d)(byte|kilobyte|kB|megabyte|MB|gigabyte|GB|terabyte|TB|petabyte|PB)\\b"
                }
            ]
        }
    },
    "scopeName": "source.axon"
}